{"version":3,"sources":["components/IncidentList/IncidentList.module.scss","components/SearchPanel/SearchPanel.module.scss","components/IncidentCard/IncidentCard.module.scss","components/Case/Case.module.scss","components/Case/Map/Map.module.scss","components/Main/Main.module.scss","components/ErrorInfo/ErrorInfo.module.scss","components/Pagination/Pagination.module.scss","components/Header/Header.module.scss","assets/logo.png","utils/call-api.js","components/SearchPanel/SearchPanel.js","components/ErrorInfo/ErrorInfo.js","components/IncidentCard/IncidentCard.js","constants/pages.js","components/Pagination/Pagination.js","components/IncidentList/IncidentList.js","components/Header/Header.js","components/Main/Main.js","components/Case/Map/Map.js","components/Case/Case.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","incidentList","total","incidentCard","SearchPanel","errorMessage","IncidentCard","description","dateLocation","Case","Map","text","Main","ErrorInfo","Pagination","Header","__webpack_require__","p","callApi","_ref","arguments","length","undefined","occurredBefore","occurredAfter","query","_ref$path","path","incidentType","id","URL_DOMAIN_PATH","concat","url","fetch","method","headers","Accept","Content-Type","then","response","status","console","log","Error","json","catch","error","state","dateFrom","moment","format","dateTo","onChangeData","e","_this","setState","Object","defineProperty","target","name","value","onSubmit","event","preventDefault","onFind","props","_this$state","isValid","unix","isDataLoading","this","_this$state2","react_default","a","createElement","className","styles","type","placeholder","maxLength","onChange","disabled","onClick","PureComponent","_this$props","incident","_this$props$incident","title","occurred_at","updated_at","image_url_thumb","media","address","width","height","alt","src","react_router_dom","to","pathname","CASES_ON_PAGE","openFirstPage","openPage","openPreviousPage","currentPage","openNextPage","_this$props2","openLastPage","getTotalPages","totalRecords","Math","ceil","_this$props3","pages","Array","fill","map","v","i","pageIndex","key","IncidentList","listWithPagination","incidents","Fragment","filter","element","index","IncidentCard_IncidentCard","Pagination_Pagination","logo","isDataError","getData","_callee","_ref2","_ref3","_args","regenerator_default","wrap","_context","prev","next","sent","t0","finish","stop","_ref4","pageNumber","window","scrollTo","dataLayout","ErrorInfo_ErrorInfo","IncidentList_IncidentList","Header_Header","SearchPanel_SearchPanel","center","lib_default","bootstrapURLKeys","defaultCenter","defaultZoom","Component","match","params","location","incidentBase","data","toLowerCase","locations","incidentLocation","features","find","feature","properties","parseInt","mapCoordinates","geometry","coordinates","_this$state$incident","updatedAt","Map_Map","lng","lat","defaultProps","App","react_router","history","createBrowserHistory","exact","component","Boolean","hostname","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.875e62be.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"incidentList\":\"IncidentList_incidentList__2eZkd\",\"total\":\"IncidentList_total__iDXrF\",\"incidentCard\":\"IncidentList_incidentCard__3WQcZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchPanel\":\"SearchPanel_SearchPanel__1foKe\",\"errorMessage\":\"SearchPanel_errorMessage__3Etz9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"IncidentCard\":\"IncidentCard_IncidentCard__2-s2X\",\"description\":\"IncidentCard_description__3uR4S\",\"dateLocation\":\"IncidentCard_dateLocation__17kOc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Case\":\"Case_Case__30Qdt\",\"Map\":\"Case_Map__Fwe67\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Map\":\"Map_Map__2LgFX\",\"text\":\"Map_text__2eo1a\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Main\":\"Main_Main__owx8l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ErrorInfo\":\"ErrorInfo_ErrorInfo__14-cE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Pagination\":\"Pagination_Pagination__e7rGA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header_Header__19fun\"};","module.exports = __webpack_public_path__ + \"static/media/logo.37738632.png\";","export default function callApi({\n  occurredBefore,\n  occurredAfter,\n  query,\n  path = 'incidents',\n  incidentType,\n  id,\n} = {}) {\n  const URL_DOMAIN_PATH = `https://bikewise.org:443/api/v2/${path}`;\n  const url = id\n    ? `${URL_DOMAIN_PATH}/${id}`\n    : `${URL_DOMAIN_PATH}?proximity=berlin&proximity_square=100${occurredBefore ? `&occurred_before=${occurredBefore}` : ''}${occurredAfter ? `&occurred_after=${occurredAfter}` : ''}${query ? `&query=${query}` : ''}${incidentType ? `&incident_type=${incidentType}` : ''}`;\n\n  return fetch(url, {\n    method: 'GET',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n  })\n    .then((response) => {\n      if (response.status !== 200) {\n        console.log('ERROR response status incorrect', response.status);\n        throw new Error(`ERROR response status incorrect : ${response.status}`);\n      }\n\n      return response.json();\n    })\n    .catch((error) => {\n      console.log('ERROR', error);\n      throw new Error(`ERROR: ${error}`);\n    });\n}\n","// Core\nimport React, { PureComponent } from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\n\n// Instruments\nimport styles from './SearchPanel.module.scss';\n\nexport default class SearchPanel extends PureComponent {\n  state = {\n    // TODO remove from value\n    dateFrom: moment('2018-01-01').format('YYYY-MM-DD'),\n    dateTo: moment().format('YYYY-MM-DD'),\n    query: '',\n  };\n\n  onChangeData = (e) => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = (event) => {\n    event.preventDefault();\n\n    const { onFind } = this.props;\n    const { dateFrom, dateTo, query } = this.state;\n\n    let errorMessage;\n\n    if (dateFrom && !moment(dateFrom).isValid()) {\n      errorMessage = 'date From is not valid';\n    }\n\n    if (dateTo && !moment(dateTo).isValid()) {\n      errorMessage = 'date To is not valid';\n    }\n\n    if (dateFrom && dateTo && dateFrom > dateTo) {\n      errorMessage = '\"From\" date is greater than date \"To\"';\n    }\n\n    if (!errorMessage) {\n      onFind({\n        dateFrom: moment(dateFrom).unix(),\n        dateTo: moment(dateTo).unix(),\n        query,\n      });\n    } else {\n      this.setState({ errorMessage });\n    }\n  };\n\n  render() {\n    const { isDataLoading } = this.props;\n    const { dateFrom, dateTo, errorMessage } = this.state;\n\n    return (\n      <div className={styles.SearchPanel}>\n        <form onSubmit={this.onSubmit}>\n          <input type=\"text\" placeholder=\"Search case descriptions\" name=\"query\" maxLength={30} onChange={this.onChangeData} />\n\n          <div>\n            <div>From</div>\n            <input type=\"date\" placeholder=\"from\" name=\"dateFrom\" onChange={this.onChangeData} value={dateFrom} />\n          </div>\n\n          <div>\n            <div>To</div>\n            <input type=\"date\" placeholder=\"to\" name=\"dateTo\" onChange={this.onChangeData} value={dateTo} />\n          </div>\n\n          <button type=\"submit\" disabled={isDataLoading} onClick={this.onSubmit}>Find cases</button>\n        </form>\n        {errorMessage && <div className={styles.errorMessage}>{errorMessage}</div>}\n      </div>\n    );\n  }\n}\n\nSearchPanel.propTypes = {\n  isDataLoading: PropTypes.bool.isRequired,\n  onFind: PropTypes.func.isRequired,\n};\n","// Core\nimport React, { PureComponent } from 'react';\n\n// Instruments\nimport styles from './ErrorInfo.module.scss';\n\nexport default class ErrorInfo extends PureComponent {\n  render() {\n    return (\n      <div className={styles.ErrorInfo}>\n        <p>Ooops, something went wrong</p>\n      </div>\n    );\n  }\n}\n\n// TODO add propTypes\n","// Core\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\n\n// Instruments\nimport styles from './IncidentCard.module.scss';\n\nexport default class IncidentCard extends PureComponent {\n  render() {\n    const {\n      incident, incident: {\n        title, description, occurred_at, updated_at, media: { image_url_thumb }, address, id,\n      },\n    } = this.props;\n\n    return (\n      <div className={styles.IncidentCard}>\n        <div>\n          {\n            image_url_thumb && <img width={100} height={100} alt=\"bike\" src={image_url_thumb} />\n          }\n        </div>\n        <div>\n          <Link to={{ pathname: `case/${id}`, state: { incident } }}><div>{title}</div></Link>\n          <div className={styles.description}>{description}</div>\n          <div>\n            <strong>Date of the theft:</strong>\n            {` ${moment.unix(occurred_at).format('ddd MMM D YYYY')}`}\n          </div>\n          <div>\n            <strong>Report date:</strong>\n            {`: ${moment.unix(updated_at).format('ddd MMM D YYYY')}`}\n          </div>\n          <div>\n            <strong>Location:</strong>\n            {` ${address}`}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nIncidentCard.propTypes = {\n  incident: PropTypes.shape({\n    id: PropTypes.number,\n    title: PropTypes.string,\n    address: PropTypes.string,\n    description: PropTypes.string,\n    occurred_at: PropTypes.number,\n    updated_at: PropTypes.number,\n    media: PropTypes.shape({\n      image_url_thumb: PropTypes.string,\n    }),\n  }).isRequired,\n};\n","export const CASES_ON_PAGE = 10;\n","// Core\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\n// Instruments\nimport styles from './Pagination.module.scss';\n\n// Constants\nimport { CASES_ON_PAGE } from '../../constants/pages';\n\nexport default class Pagination extends PureComponent {\n  openFirstPage = () => {\n    const { openPage } = this.props;\n    openPage(1);\n  };\n\n  openPreviousPage = () => {\n    const { currentPage, openPage } = this.props;\n    openPage(currentPage - 1);\n  };\n\n  openNextPage = () => {\n    const { currentPage, openPage } = this.props;\n    openPage(currentPage + 1);\n  };\n\n  openLastPage = () => {\n    const { openPage } = this.props;\n    openPage(this.getTotalPages);\n  };\n\n  getTotalPages = () => {\n    const { totalRecords } = this.props;\n    return Math.ceil(totalRecords / CASES_ON_PAGE);\n  };\n\n  render() {\n    const { currentPage, openPage } = this.props;\n    const pages = new Array(this.getTotalPages()).fill(0).map((v, i) => i + 1);\n\n    return (\n      <div className={styles.Pagination}>\n        <button type=\"button\" onClick={this.openFirstPage} disabled={currentPage === 1}>{'<< First'}</button>\n        <button type=\"button\" onClick={this.openPreviousPage} disabled={currentPage === 1}>{'< Prev'}</button>\n\n        { pages.map(pageIndex => <button type=\"button\" onClick={() => openPage(pageIndex)} disabled={currentPage === pageIndex} key={pageIndex}>{pageIndex}</button>) }\n\n        <button type=\"button\" onClick={this.openNextPage} disabled={currentPage === pages.length}>{'Next >'}</button>\n        <button type=\"button\" onClick={this.openLastPage} disabled={currentPage === pages.length}>{'Last >>'}</button>\n      </div>\n    );\n  }\n}\n\nPagination.propTypes = {\n  // TODO add check must be equal or bigger 0\n  totalRecords: PropTypes.number.isRequired,\n  openPage: PropTypes.func.isRequired,\n\n  // TODO add check must be bigger 0\n  currentPage: PropTypes.number.isRequired,\n};\n","// Core\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\n// Components\nimport IncidentCard from '../IncidentCard/IncidentCard';\nimport Pagination from '../Pagination/Pagination';\n\n// Constants\nimport { CASES_ON_PAGE } from '../../constants/pages';\n\n// Instruments\nimport styles from './IncidentList.module.scss';\n\nexport default class IncidentList extends PureComponent {\n  listWithPagination = () => {\n    const { openPage, currentPage, incidents } = this.props;\n\n    return (\n      <>\n        <div className={styles.total}>{`total: ${incidents.length}`}</div>\n        {incidents\n          // eslint-disable-next-line\n          .filter((element, index) => (CASES_ON_PAGE * (currentPage - 1) <= index) && (index < CASES_ON_PAGE * currentPage))\n          .map(\n            incident => (\n              <div className={styles.incidentCard} key={incident.id}>\n                <IncidentCard incident={incident} />\n              </div>\n            ),\n          )}\n        <Pagination currentPage={currentPage} openPage={openPage} totalRecords={incidents.length} />\n      </>\n    );\n  };\n\n  render() {\n    const { incidents } = this.props;\n\n    return (\n      <div className={styles.incidentList}>\n        {\n          incidents.length > 0 ? this.listWithPagination() : <p>No results</p>\n        }\n      </div>\n    );\n  }\n}\n\nIncidentList.propTypes = {\n  incidents: PropTypes.arrayOf(PropTypes.object).isRequired,\n  currentPage: PropTypes.number.isRequired,\n  openPage: PropTypes.func.isRequired,\n};\n","// Core\nimport React, { PureComponent } from 'react';\n\n// Instruments\nimport styles from './Header.module.scss';\nimport logo from '../../assets/logo.png';\n\nexport default class Header extends PureComponent {\n  render() {\n    return (\n      <div className={styles.Header}>\n        <img src={logo} alt=\"logo\" />\n        <div>\n          <h1>Police Department of Berlin</h1>\n          <h2>Stolen bikes</h2>\n        </div>\n      </div>\n    );\n  }\n}\n","// Core\nimport React, { PureComponent } from 'react';\nimport callApi from '../../utils/call-api';\n\n// Instruments\nimport styles from './Main.module.scss';\n\n// Components\nimport SearchPanel from '../SearchPanel/SearchPanel';\nimport ErrorInfo from '../ErrorInfo/ErrorInfo';\nimport IncidentList from '../IncidentList/IncidentList';\nimport Header from '../Header/Header';\n\nexport default class Main extends PureComponent {\n  state = {\n    isDataError: false,\n    isDataLoading: false,\n    incidents: [],\n    currentPage: 1,\n  };\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData = async ({ dateFrom, dateTo, query } = {}) => {\n    this.setState({\n      isDataError: false, isDataLoading: true,\n    });\n\n    try {\n      const { incidents } = await callApi({ dateFrom, dateTo, query });\n      this.setState({ incidents });\n    } catch (error) {\n      this.setState({ isDataError: true });\n    } finally {\n      this.setState({ isDataLoading: false });\n    }\n  };\n\n  onFind = ({ dateFrom, dateTo, query }) => {\n    this.setState({ currentPage: 1 });\n    this.getData({ dateFrom, dateTo, query });\n  };\n\n  openPage = (pageNumber) => {\n    this.setState({ currentPage: pageNumber });\n    window.scrollTo(0, 0);\n  };\n\n  dataLayout = () => {\n    const {\n      isDataError, incidents, currentPage, isDataLoading,\n    } = this.state;\n\n    if (isDataError) {\n      return <ErrorInfo />;\n    } if (isDataLoading) {\n      return <p>Loading ... </p>;\n    }\n    return (\n      <IncidentList\n        incidents={incidents}\n        currentPage={currentPage}\n        openPage={this.openPage}\n      />\n    );\n  };\n\n  render() {\n    const { isDataLoading } = this.state;\n\n    return (\n      <div className={styles.Main}>\n        <Header />\n\n        <SearchPanel onFind={this.onFind} isDataLoading={isDataLoading} />\n\n        {this.dataLayout()}\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport PropTypes from 'prop-types';\n\n// Instruments\nimport styles from './Map.module.scss';\n\nexport default class Map extends Component {\n  render() {\n    const { center } = this.props;\n\n    return (\n      <div className={styles.Map}>\n        <GoogleMapReact\n          bootstrapURLKeys={{ key: 'AIzaSyB23QiArAUU74ItBhbCBnc7gmBKXhdXumc' }}\n          defaultCenter={center}\n          defaultZoom={15}\n        >\n          <div className={styles.text}>* Incident location</div>\n        </GoogleMapReact>\n      </div>\n    );\n  }\n}\n\nMap.propTypes = {\n  center: PropTypes.shape({\n    lat: PropTypes.number,\n    lng: PropTypes.number,\n  }).isRequired,\n};\n","// Core\nimport React, { PureComponent } from 'react';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport callApi from '../../utils/call-api';\n\n// Instruments\nimport styles from './Case.module.scss';\n\n// Components\nimport Header from '../Header/Header';\nimport Map from './Map/Map';\n\nexport default class Case extends PureComponent {\n  state = {\n    incident: {},\n  };\n\n  async componentDidMount() {\n    const {\n      match: { params: { id } },\n      location: { state: { incident } = {} },\n    } = this.props;\n\n    let incidentBase = incident;\n\n    if (incidentBase) {\n      this.setState({ incident });\n    } else {\n      try {\n        const data = await callApi({ id });\n        this.setState({ incident: data.incident });\n        incidentBase = data.incident;\n      } catch (error) {\n        throw new Error(`ERROR call api with caseId : ${id}`);\n      }\n    }\n\n    const locations = await callApi({\n      path: 'locations',\n      occurredBefore: incidentBase.occurred_at + 1,\n      occurredAfter: incidentBase.occurred_at,\n      incidentType: incidentBase.type.toLowerCase(),\n    });\n\n    const incidentLocation = locations.features.find(\n      feature => feature.properties.id === parseInt(id, 10),\n    );\n\n    if (incidentLocation) {\n      this.setState({ mapCoordinates: incidentLocation.geometry.coordinates });\n    }\n  }\n\n  render() {\n    const {\n      incident: {\n        title, updated_at: updatedAt, description, address,\n      },\n      mapCoordinates,\n    } = this.state;\n\n    return (\n      <div className={styles.Case}>\n        <Header />\n        <div>{title}</div>\n        <div>{`Stolen ${moment.unix(updatedAt).format('llll')} at ${address}`}</div>\n        {\n          mapCoordinates\n            && (\n            <div className={styles.Map}>\n              <Map center={{ lng: mapCoordinates[0], lat: mapCoordinates[1] }} />\n            </div>\n            )\n        }\n        <h2>DESCRIPTION OF INCIDENT</h2>\n        <div>{description}</div>\n      </div>\n    );\n  }\n}\n\nCase.propTypes = {\n  location: PropTypes.shape,\n  match: PropTypes.shape,\n};\n\nCase.defaultProps = {\n  location: {},\n  match: {},\n};\n","// Core\nimport React from 'react';\nimport { createBrowserHistory } from 'history';\nimport {\n  Router, Route, Switch, Redirect,\n} from 'react-router-dom';\n\n// Components\nimport Main from './Main/Main';\nimport Case from './Case/Case';\n\nconst App = () => (\n  <Router history={createBrowserHistory()}>\n    <Switch>\n      <Route exact path=\"/\" component={Main} />\n      <Route exact path=\"/case/:id?\" component={Case} />\n      <Redirect to=\"/\" />\n    </Switch>\n  </Router>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}